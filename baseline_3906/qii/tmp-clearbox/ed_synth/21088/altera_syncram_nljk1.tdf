--altera_syncram ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Agilex 5" INIT_FILE="qdb/_compiler/ed_synth/root_partition/24.3.1/partitioned/1/mifs/ed_synth0.rtl.mif" LOW_POWER_MODE="AUTO" NUMWORDS_A=256 OPERATION_MODE="ROM" OUTDATA_REG_A="UNREGISTERED" RAM_BLOCK_TYPE="AUTO" WIDTH_A=32 WIDTHAD_A=8 address_a clock0 q_a CARRY_CHAIN="MANUAL" CYCLONEII_M4K_COMPATIBILITY="ON"
--VERSION_BEGIN 24.3 cbx_altera_syncram 2024:12:20:22:35:26:SC cbx_altera_syncram_ltm 2024:12:20:22:35:26:SC cbx_altera_syncram_nd_impl 2024:12:20:22:35:26:SC cbx_altsyncram 2024:12:20:22:35:26:SC cbx_libertymesa 2024:12:20:22:35:26:SC cbx_lpm_add_sub 2024:12:20:22:35:26:SC cbx_lpm_compare 2024:12:20:22:35:26:SC cbx_lpm_decode 2024:12:20:22:35:27:SC cbx_lpm_mux 2024:12:20:22:35:27:SC cbx_mgl 2024:12:20:22:35:35:SC cbx_nadder 2024:12:20:22:35:27:SC cbx_stratix 2024:12:20:22:35:27:SC cbx_stratixii 2024:12:20:22:35:27:SC cbx_stratixiii 2024:12:20:22:35:27:SC cbx_stratixv 2024:12:20:22:35:27:SC cbx_util_mgl 2024:12:20:22:35:27:SC  VERSION_END


-- Copyright (C) 2025  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the Intel FPGA Software License Subscription Agreements 
--  on the Quartus Prime software download page.


FUNCTION altera_syncram_impl_l8cc (address_a[7..0], clock0)
RETURNS ( q_a[31..0]);

--synthesis_resources = ram_bits (AUTO) 8192 
SUBDESIGN altera_syncram_nljk1
( 
	address_a[7..0]	:	input;
	clock0	:	input;
	q_a[31..0]	:	output;
) 
VARIABLE 
	altera_syncram_impl1 : altera_syncram_impl_l8cc;

BEGIN 
	altera_syncram_impl1.address_a[] = address_a[];
	altera_syncram_impl1.clock0 = clock0;
	q_a[] = altera_syncram_impl1.q_a[];
END;
--VALID FILE
